{
  "address": "0x991338103bf9Ab4DDcfCe5A74892DaaaE08e81DC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AdminContract__CollateralAlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AdminContract__OnlyOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AdminContract__OnlyTimelock",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ERC1967InvalidImplementation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1967NonPayable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "parameter",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "valueEntered",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxValue",
          "type": "uint256"
        }
      ],
      "name": "SafeCheckError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UUPSUnauthorizedCallContext",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "slot",
          "type": "bytes32"
        }
      ],
      "name": "UUPSUnsupportedProxiableUUID",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldBorrowingFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBorrowingFee",
          "type": "uint256"
        }
      ],
      "name": "BorrowingFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCCR",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCCR",
          "type": "uint256"
        }
      ],
      "name": "CCRChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "CollateralAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMCR",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMCR",
          "type": "uint256"
        }
      ],
      "name": "MCRChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMinNet",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinNet",
          "type": "uint256"
        }
      ],
      "name": "MinNetDebtChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMintCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMintCap",
          "type": "uint256"
        }
      ],
      "name": "MintCapChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldPercentDiv",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPercentDiv",
          "type": "uint256"
        }
      ],
      "name": "PercentDivisorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_blockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionBlockTimestampChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRedemptionFeeFloor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRedemptionFeeFloor",
          "type": "uint256"
        }
      ],
      "name": "RedemptionFeeFloorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BORROWING_FEE_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CCR_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DECIMAL_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MCR_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_CAP_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_NET_DEBT_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT_DIVISOR_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDEMPTION_BLOCK_TIMESTAMP_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDEMPTION_FEE_FLOOR_DEFAULT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UPGRADE_INTERFACE_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_100pct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activePool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_debtTokenGasCompensation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "addNewCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "authorizeUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowerOperations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collSurplusPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityIssuance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debtToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getBorrowingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getCcr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getDebtTokenGasCompensation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_colls",
          "type": "address[]"
        }
      ],
      "name": "getIndices",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getIsActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getMcr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getMinNetDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getMintCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getPercentDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getRedemptionBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        }
      ],
      "name": "getRedemptionFeeFloor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getTotalAssetDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidCollateral",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAddressSetupInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSetupInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        }
      ],
      "name": "setAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowingFee",
          "type": "uint256"
        }
      ],
      "name": "setBorrowingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newCCR",
          "type": "uint256"
        }
      ],
      "name": "setCCR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowingFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ccr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mcr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minNetDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentDivisor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "redemptionFeeFloor",
          "type": "uint256"
        }
      ],
      "name": "setCollateralParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_communityIssuance",
          "type": "address"
        }
      ],
      "name": "setCommunityIssuance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "setIsActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMCR",
          "type": "uint256"
        }
      ],
      "name": "setMCR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minNetDebt",
          "type": "uint256"
        }
      ],
      "name": "setMinNetDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintCap",
          "type": "uint256"
        }
      ],
      "name": "setMintCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "percentDivisor",
          "type": "uint256"
        }
      ],
      "name": "setPercentDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "setRedemptionBlockTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redemptionFeeFloor",
          "type": "uint256"
        }
      ],
      "name": "setRedemptionFeeFloor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSetupIsInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trenStaking",
          "type": "address"
        }
      ],
      "name": "setTRENStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortedTrenBoxes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilityPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trenBoxManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trenBoxManagerOperations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trenStaking",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validCollateral",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xbd69456e93650c8d1b975055e35dd4cfc415352d32f9fba55073f24efcb36fce",
  "receipt": {
    "to": null,
    "from": "0x19E733F20aAdaB8996f7895ACBD04f746BF4Aac1",
    "contractAddress": "0x991338103bf9Ab4DDcfCe5A74892DaaaE08e81DC",
    "transactionIndex": 59,
    "gasUsed": "2850675",
    "logsBloom": "0x
    "blockHash": "0xe6e39d25da511ea7415ffe730584f63010ea5407bf01c25c7edab1de2eee48b8",
    "transactionHash": "0xbd69456e93650c8d1b975055e35dd4cfc415352d32f9fba55073f24efcb36fce",
    "logs": [],
    "blockNumber": 5625480,
    "cumulativeGasUsed": "9601463",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e6971fb87a17deef3641f1719687e39f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminContract__CollateralAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminContract__OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminContract__OnlyTimelock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"parameter\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"valueEntered\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxValue\",\"type\":\"uint256\"}],\"name\":\"SafeCheckError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBorrowingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBorrowingFee\",\"type\":\"uint256\"}],\"name\":\"BorrowingFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCCR\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCCR\",\"type\":\"uint256\"}],\"name\":\"CCRChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"CollateralAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMCR\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMCR\",\"type\":\"uint256\"}],\"name\":\"MCRChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinNet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinNet\",\"type\":\"uint256\"}],\"name\":\"MinNetDebtChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMintCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMintCap\",\"type\":\"uint256\"}],\"name\":\"MintCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPercentDiv\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPercentDiv\",\"type\":\"uint256\"}],\"name\":\"PercentDivisorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionBlockTimestampChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRedemptionFeeFloor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRedemptionFeeFloor\",\"type\":\"uint256\"}],\"name\":\"RedemptionFeeFloorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BORROWING_FEE_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CCR_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MCR_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_CAP_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_NET_DEBT_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_DIVISOR_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEMPTION_BLOCK_TIMESTAMP_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEMPTION_FEE_FLOOR_DEFAULT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_100pct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_debtTokenGasCompensation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"addNewCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"authorizeUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowerOperations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collSurplusPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityIssuance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getBorrowingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getCcr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getDebtTokenGasCompensation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_colls\",\"type\":\"address[]\"}],\"name\":\"getIndices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getIsActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getMcr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getMinNetDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getMintCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getPercentDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getRedemptionBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"getRedemptionFeeFloor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getTotalAssetDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValidCollateral\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAddressSetupInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSetupInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowingFee\",\"type\":\"uint256\"}],\"name\":\"setBorrowingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newCCR\",\"type\":\"uint256\"}],\"name\":\"setCCR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ccr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mcr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minNetDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentDivisor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeFloor\",\"type\":\"uint256\"}],\"name\":\"setCollateralParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_communityIssuance\",\"type\":\"address\"}],\"name\":\"setCommunityIssuance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setIsActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMCR\",\"type\":\"uint256\"}],\"name\":\"setMCR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minNetDebt\",\"type\":\"uint256\"}],\"name\":\"setMinNetDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintCap\",\"type\":\"uint256\"}],\"name\":\"setMintCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentDivisor\",\"type\":\"uint256\"}],\"name\":\"setPercentDivisor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"setRedemptionBlockTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeFloor\",\"type\":\"uint256\"}],\"name\":\"setRedemptionFeeFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSetupIsInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trenStaking\",\"type\":\"address\"}],\"name\":\"setTRENStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortedTrenBoxes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilityPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trenBoxManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trenBoxManagerOperations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trenStaking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validCollateral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setSetupIsInitialized()\":{\"details\":\"The deployment script will call this function when all initial collaterals have been configured;      after this is set to true, all subsequent config/setters will need to go through the timelocks.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"collateralParams\":{\"details\":\"Cannot be public as struct has too many variables for the stack.Create special view structs/getters instead.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AdminContract.sol\":\"AdminContract\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/Addresses.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { AddressesConfigurable } from \\\"./Dependencies/AddressesConfigurable.sol\\\";\\n\\ncontract Addresses is AddressesConfigurable { }\\n\",\"keccak256\":\"0xee6f0debf09164467fe0766a99b35a0c3f7837429bcc0d519cd6987b00e81b8c\",\"license\":\"MIT\"},\"contracts/AdminContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { UUPSUpgradeable } from\\n    \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport { OwnableUpgradeable } from\\n    \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\nimport { IAdminContract } from \\\"./Interfaces/IAdminContract.sol\\\";\\nimport { IStabilityPool } from \\\"./Interfaces/IStabilityPool.sol\\\";\\nimport { IActivePool } from \\\"./Interfaces/IActivePool.sol\\\";\\nimport { IDefaultPool } from \\\"./Interfaces/IDefaultPool.sol\\\";\\nimport { Addresses } from \\\"./Addresses.sol\\\";\\n\\ncontract AdminContract is IAdminContract, UUPSUpgradeable, OwnableUpgradeable, Addresses {\\n    // Constants\\n    // --------------------------------------------------------------------------------------------------------\\n\\n    string public constant NAME = \\\"AdminContract\\\";\\n\\n    uint256 public constant DECIMAL_PRECISION = 1 ether;\\n    uint256 public constant _100pct = 1 ether; // 1e18 == 100%\\n    uint256 private constant DEFAULT_DECIMALS = 18;\\n\\n    uint256 public constant BORROWING_FEE_DEFAULT = 0.005 ether; // 0.5%\\n    uint256 public constant CCR_DEFAULT = 1.5 ether; // 150%\\n    uint256 public constant MCR_DEFAULT = 1.1 ether; // 110%\\n    uint256 public constant MIN_NET_DEBT_DEFAULT = 2000 ether;\\n    uint256 public constant MINT_CAP_DEFAULT = 1_000_000 ether; // 1 million GRAI\\n    uint256 public constant PERCENT_DIVISOR_DEFAULT = 200; // dividing by 200 yields 0.5%\\n    uint256 public constant REDEMPTION_FEE_FLOOR_DEFAULT = 0.005 ether; // 0.5%\\n    uint256 public constant REDEMPTION_BLOCK_TIMESTAMP_DEFAULT = type(uint256).max; // never\\n\\n    // State\\n    // ------------------------------------------------------------------------------------------------------------\\n\\n    /**\\n     * @dev Cannot be public as struct has too many variables for the stack.\\n     * \\t\\t@dev Create special view structs/getters instead.\\n     */\\n    mapping(address => CollateralParams) internal collateralParams;\\n\\n    // list of all collateral types in collateralParams (active and deprecated)\\n    // Addresses for easy access\\n    address[] public validCollateral; // index maps to token address.\\n\\n    bool public isSetupInitialized;\\n\\n    // Modifiers\\n    // --------------------------------------------------------------------------------------------------------\\n\\n    // Require that the collateral exists in the controller. If it is not the 0th index, and the\\n    // index is still 0 then it does not exist in the mapping.\\n    // no require here for valid collateral 0 index because that means it exists.\\n    modifier exists(address _collateral) {\\n        _exists(_collateral);\\n        _;\\n    }\\n\\n    modifier onlyTimelock() {\\n        if (isSetupInitialized) {\\n            if (msg.sender != timelockAddress) {\\n                revert AdminContract__OnlyTimelock();\\n            }\\n        } else {\\n            if (msg.sender != owner()) {\\n                revert AdminContract__OnlyOwner();\\n            }\\n        }\\n        _;\\n    }\\n\\n    modifier safeCheck(\\n        string memory parameter,\\n        address _collateral,\\n        uint256 enteredValue,\\n        uint256 min,\\n        uint256 max\\n    ) {\\n        require(\\n            collateralParams[_collateral].active,\\n            \\\"Collateral is not configured, use setCollateralParameters\\\"\\n        );\\n\\n        if (enteredValue < min || enteredValue > max) {\\n            revert SafeCheckError(parameter, enteredValue, min, max);\\n        }\\n        _;\\n    }\\n\\n    // Initializers\\n    // -----------------------------------------------------------------------------------------------------\\n\\n    function initialize() public initializer {\\n        address initialOwner = _msgSender();\\n\\n        __Ownable_init(initialOwner);\\n        __UUPSUpgradeable_init();\\n    }\\n\\n    /**\\n     * @dev The deployment script will call this function when all initial collaterals have been\\n     * configured;\\n     *      after this is set to true, all subsequent config/setters will need to go through the\\n     * timelocks.\\n     */\\n    function setSetupIsInitialized() external onlyTimelock {\\n        isSetupInitialized = true;\\n    }\\n\\n    // External Functions\\n    // -----------------------------------------------------------------------------------------------\\n\\n    function addNewCollateral(\\n        address _collateral,\\n        uint256 _debtTokenGasCompensation, // the gas compensation is initialized here as it won't\\n            // be changed\\n        uint256 _decimals\\n    )\\n        external\\n        override\\n        onlyTimelock\\n    {\\n        require(collateralParams[_collateral].mcr == 0, \\\"collateral already exists\\\");\\n        require(_decimals == DEFAULT_DECIMALS, \\\"collaterals must have the default decimals\\\");\\n        validCollateral.push(_collateral);\\n        collateralParams[_collateral] = CollateralParams({\\n            decimals: _decimals,\\n            index: validCollateral.length - 1,\\n            active: false,\\n            borrowingFee: BORROWING_FEE_DEFAULT,\\n            ccr: CCR_DEFAULT,\\n            mcr: MCR_DEFAULT,\\n            debtTokenGasCompensation: _debtTokenGasCompensation,\\n            minNetDebt: MIN_NET_DEBT_DEFAULT,\\n            mintCap: MINT_CAP_DEFAULT,\\n            percentDivisor: PERCENT_DIVISOR_DEFAULT,\\n            redemptionFeeFloor: REDEMPTION_FEE_FLOOR_DEFAULT,\\n            redemptionBlockTimestamp: REDEMPTION_BLOCK_TIMESTAMP_DEFAULT\\n        });\\n\\n        IStabilityPool(stabilityPool).addCollateralType(_collateral);\\n\\n        // throw event\\n        emit CollateralAdded(_collateral);\\n    }\\n\\n    function setCollateralParameters(\\n        address _collateral,\\n        uint256 borrowingFee,\\n        uint256 ccr,\\n        uint256 mcr,\\n        uint256 minNetDebt,\\n        uint256 mintCap,\\n        uint256 percentDivisor,\\n        uint256 redemptionFeeFloor\\n    )\\n        public\\n        override\\n        onlyTimelock\\n    {\\n        collateralParams[_collateral].active = true;\\n        setBorrowingFee(_collateral, borrowingFee);\\n        setCCR(_collateral, ccr);\\n        setMCR(_collateral, mcr);\\n        setMinNetDebt(_collateral, minNetDebt);\\n        setMintCap(_collateral, mintCap);\\n        setPercentDivisor(_collateral, percentDivisor);\\n        setRedemptionFeeFloor(_collateral, redemptionFeeFloor);\\n    }\\n\\n    function setIsActive(address _collateral, bool _active) external onlyTimelock {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        collParams.active = _active;\\n    }\\n\\n    function setBorrowingFee(\\n        address _collateral,\\n        uint256 borrowingFee\\n    )\\n        public\\n        override\\n        onlyTimelock\\n        safeCheck(\\\"Borrowing Fee\\\", _collateral, borrowingFee, 0, 0.1 ether) // 0% - 10%\\n    {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        uint256 oldBorrowing = collParams.borrowingFee;\\n        collParams.borrowingFee = borrowingFee;\\n        emit BorrowingFeeChanged(oldBorrowing, borrowingFee);\\n    }\\n\\n    function setCCR(\\n        address _collateral,\\n        uint256 newCCR\\n    )\\n        public\\n        override\\n        onlyTimelock\\n        safeCheck(\\\"CCR\\\", _collateral, newCCR, 1 ether, 10 ether) // 100% - 1,000%\\n    {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        uint256 oldCCR = collParams.ccr;\\n        collParams.ccr = newCCR;\\n        emit CCRChanged(oldCCR, newCCR);\\n    }\\n\\n    function setMCR(\\n        address _collateral,\\n        uint256 newMCR\\n    )\\n        public\\n        override\\n        onlyTimelock\\n        safeCheck(\\\"MCR\\\", _collateral, newMCR, 1.01 ether, 10 ether) // 101% - 1,000%\\n    {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        uint256 oldMCR = collParams.mcr;\\n        collParams.mcr = newMCR;\\n        emit MCRChanged(oldMCR, newMCR);\\n    }\\n\\n    function setMinNetDebt(\\n        address _collateral,\\n        uint256 minNetDebt\\n    )\\n        public\\n        override\\n        onlyTimelock\\n        safeCheck(\\\"Min Net Debt\\\", _collateral, minNetDebt, 0, 2000 ether)\\n    {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        uint256 oldMinNet = collParams.minNetDebt;\\n        collParams.minNetDebt = minNetDebt;\\n        emit MinNetDebtChanged(oldMinNet, minNetDebt);\\n    }\\n\\n    function setMintCap(address _collateral, uint256 mintCap) public override onlyTimelock {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        uint256 oldMintCap = collParams.mintCap;\\n        collParams.mintCap = mintCap;\\n        emit MintCapChanged(oldMintCap, mintCap);\\n    }\\n\\n    function setPercentDivisor(\\n        address _collateral,\\n        uint256 percentDivisor\\n    )\\n        public\\n        override\\n        onlyTimelock\\n        safeCheck(\\\"Percent Divisor\\\", _collateral, percentDivisor, 2, 200)\\n    {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        uint256 oldPercent = collParams.percentDivisor;\\n        collParams.percentDivisor = percentDivisor;\\n        emit PercentDivisorChanged(oldPercent, percentDivisor);\\n    }\\n\\n    function setRedemptionFeeFloor(\\n        address _collateral,\\n        uint256 redemptionFeeFloor\\n    )\\n        public\\n        override\\n        onlyTimelock\\n        safeCheck(\\\"Redemption Fee Floor\\\", _collateral, redemptionFeeFloor, 0.001 ether, 0.1 ether) // 0.10%\\n            // - 10%\\n    {\\n        CollateralParams storage collParams = collateralParams[_collateral];\\n        uint256 oldRedemptionFeeFloor = collParams.redemptionFeeFloor;\\n        collParams.redemptionFeeFloor = redemptionFeeFloor;\\n        emit RedemptionFeeFloorChanged(oldRedemptionFeeFloor, redemptionFeeFloor);\\n    }\\n\\n    function setRedemptionBlockTimestamp(\\n        address _collateral,\\n        uint256 _blockTimestamp\\n    )\\n        public\\n        override\\n        onlyTimelock\\n    {\\n        collateralParams[_collateral].redemptionBlockTimestamp = _blockTimestamp;\\n        emit RedemptionBlockTimestampChanged(_collateral, _blockTimestamp);\\n    }\\n\\n    // View functions\\n    // ---------------------------------------------------------------------------------------------------\\n\\n    function getValidCollateral() external view override returns (address[] memory) {\\n        return validCollateral;\\n    }\\n\\n    function getIsActive(address _collateral)\\n        external\\n        view\\n        override\\n        exists(_collateral)\\n        returns (bool)\\n    {\\n        return collateralParams[_collateral].active;\\n    }\\n\\n    function getDecimals(address _collateral) external view exists(_collateral) returns (uint256) {\\n        return collateralParams[_collateral].decimals;\\n    }\\n\\n    function getIndex(address _collateral)\\n        external\\n        view\\n        override\\n        exists(_collateral)\\n        returns (uint256)\\n    {\\n        return (collateralParams[_collateral].index);\\n    }\\n\\n    function getIndices(address[] memory _colls) external view returns (uint256[] memory indices) {\\n        uint256 len = _colls.length;\\n        indices = new uint256[](len);\\n\\n        for (uint256 i; i < len;) {\\n            _exists(_colls[i]);\\n            indices[i] = collateralParams[_colls[i]].index;\\n            unchecked {\\n                i++;\\n            }\\n        }\\n    }\\n\\n    function getMcr(address _collateral) external view override returns (uint256) {\\n        return collateralParams[_collateral].mcr;\\n    }\\n\\n    function getCcr(address _collateral) external view override returns (uint256) {\\n        return collateralParams[_collateral].ccr;\\n    }\\n\\n    function getDebtTokenGasCompensation(address _collateral)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        return collateralParams[_collateral].debtTokenGasCompensation;\\n    }\\n\\n    function getMinNetDebt(address _collateral) external view override returns (uint256) {\\n        return collateralParams[_collateral].minNetDebt;\\n    }\\n\\n    function getPercentDivisor(address _collateral) external view override returns (uint256) {\\n        return collateralParams[_collateral].percentDivisor;\\n    }\\n\\n    function getBorrowingFee(address _collateral) external view override returns (uint256) {\\n        return collateralParams[_collateral].borrowingFee;\\n    }\\n\\n    function getRedemptionFeeFloor(address _collateral) external view override returns (uint256) {\\n        return collateralParams[_collateral].redemptionFeeFloor;\\n    }\\n\\n    function getRedemptionBlockTimestamp(address _collateral)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        return collateralParams[_collateral].redemptionBlockTimestamp;\\n    }\\n\\n    function getMintCap(address _collateral) external view override returns (uint256) {\\n        return collateralParams[_collateral].mintCap;\\n    }\\n\\n    function getTotalAssetDebt(address _asset) external view override returns (uint256) {\\n        return IActivePool(activePool).getDebtTokenBalance(_asset)\\n            + IDefaultPool(defaultPool).getDebtTokenBalance(_asset);\\n    }\\n\\n    // Internal Functions\\n    // -----------------------------------------------------------------------------------------------\\n\\n    function _exists(address _collateral) internal view {\\n        require(collateralParams[_collateral].mcr != 0, \\\"collateral does not exist\\\");\\n    }\\n\\n    function authorizeUpgrade(address newImplementation) public {\\n        _authorizeUpgrade(newImplementation);\\n    }\\n\\n    function _authorizeUpgrade(address) internal override onlyOwner { }\\n}\\n\",\"keccak256\":\"0x9ea55c320e3457ee8f890a70f0590f51dc17ea406cd721c43cf364b1ae5e5c7d\",\"license\":\"MIT\"},\"contracts/Dependencies/AddressesConfigurable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { OwnableUpgradeable } from\\n    \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\nabstract contract AddressesConfigurable is OwnableUpgradeable {\\n    address public activePool;\\n    address public adminContract;\\n    address public borrowerOperations;\\n    address public collSurplusPool;\\n    address public communityIssuance;\\n    address public debtToken;\\n    address public defaultPool;\\n    address public feeCollector;\\n    address public gasPoolAddress;\\n    address public trenStaking;\\n    address public priceFeed;\\n    address public sortedTrenBoxes;\\n    address public stabilityPool;\\n    address public timelockAddress;\\n    address public treasuryAddress;\\n    address public trenBoxManager;\\n    address public trenBoxManagerOperations;\\n\\n    bool public isAddressSetupInitialized;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[33] private __gap; // Goerli uses 47; Arbitrum uses 33\\n\\n    // Dependency setters\\n    // -----------------------------------------------------------------------------------------------\\n\\n    function setAddresses(address[] calldata _addresses) external onlyOwner {\\n        require(!isAddressSetupInitialized, \\\"Setup is already initialized\\\");\\n        require(_addresses.length == 15, \\\"Expected 15 addresses at setup\\\");\\n        for (uint256 i = 0; i < 15; i++) {\\n            require(_addresses[i] != address(0), \\\"Invalid address\\\");\\n        }\\n        activePool = _addresses[0];\\n        adminContract = _addresses[1];\\n        borrowerOperations = _addresses[2];\\n        collSurplusPool = _addresses[3];\\n        debtToken = _addresses[4];\\n        defaultPool = _addresses[5];\\n        feeCollector = _addresses[6];\\n        gasPoolAddress = _addresses[7];\\n        priceFeed = _addresses[8];\\n        sortedTrenBoxes = _addresses[9];\\n        stabilityPool = _addresses[10];\\n        timelockAddress = _addresses[11];\\n        treasuryAddress = _addresses[12];\\n        trenBoxManager = _addresses[13];\\n        trenBoxManagerOperations = _addresses[14];\\n\\n        isAddressSetupInitialized = true;\\n    }\\n\\n    function setCommunityIssuance(address _communityIssuance) public onlyOwner {\\n        communityIssuance = _communityIssuance;\\n    }\\n\\n    function setTRENStaking(address _trenStaking) public onlyOwner {\\n        trenStaking = _trenStaking;\\n    }\\n}\\n\",\"keccak256\":\"0xd11d486cb2a0c07199b14176e64ad449567e453db4bccdb1d35a06bf732ccc4a\",\"license\":\"MIT\"},\"contracts/Interfaces/IActivePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { IPool } from \\\"./IPool.sol\\\";\\n\\ninterface IActivePool is IPool {\\n    // --- Events ---\\n\\n    event ActivePoolDebtUpdated(address _asset, uint256 _debtTokenAmount);\\n    event ActivePoolAssetBalanceUpdated(address _asset, uint256 _balance);\\n\\n    // --- Functions ---\\n\\n    function sendAsset(address _asset, address _account, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x24cd7bd86a150c9c6fe86f48dc36d1ce8619e98d839794293721a0262b02b342\",\"license\":\"MIT\"},\"contracts/Interfaces/IAdminContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { IActivePool } from \\\"./IActivePool.sol\\\";\\nimport { IDefaultPool } from \\\"./IDefaultPool.sol\\\";\\nimport { IPriceFeed } from \\\"./IPriceFeed.sol\\\";\\n\\ninterface IAdminContract {\\n    // Structs\\n    // ----------------------------------------------------------------------------------------------------------\\n\\n    struct CollateralParams {\\n        uint256 decimals;\\n        uint256 index; // Maps to token address in validCollateral[]\\n        bool active;\\n        uint256 borrowingFee;\\n        uint256 ccr;\\n        uint256 mcr;\\n        uint256 debtTokenGasCompensation; // Amount of debtToken to be locked in gas pool on opening\\n            // trenBoxes\\n        uint256 minNetDebt; // Minimum amount of net debtToken a trenBox must have\\n        uint256 mintCap;\\n        uint256 percentDivisor;\\n        uint256 redemptionFeeFloor;\\n        uint256 redemptionBlockTimestamp;\\n    }\\n\\n    // Custom Errors\\n    // ----------------------------------------------------------------------------------------------------\\n\\n    error SafeCheckError(string parameter, uint256 valueEntered, uint256 minValue, uint256 maxValue);\\n    error AdminContract__OnlyOwner();\\n    error AdminContract__OnlyTimelock();\\n    error AdminContract__CollateralAlreadyInitialized();\\n\\n    // Events\\n    // -----------------------------------------------------------------------------------------------------------\\n\\n    event CollateralAdded(address _collateral);\\n    event MCRChanged(uint256 oldMCR, uint256 newMCR);\\n    event CCRChanged(uint256 oldCCR, uint256 newCCR);\\n    event MinNetDebtChanged(uint256 oldMinNet, uint256 newMinNet);\\n    event PercentDivisorChanged(uint256 oldPercentDiv, uint256 newPercentDiv);\\n    event BorrowingFeeChanged(uint256 oldBorrowingFee, uint256 newBorrowingFee);\\n    event RedemptionFeeFloorChanged(uint256 oldRedemptionFeeFloor, uint256 newRedemptionFeeFloor);\\n    event MintCapChanged(uint256 oldMintCap, uint256 newMintCap);\\n    event RedemptionBlockTimestampChanged(address _collateral, uint256 _blockTimestamp);\\n\\n    // Functions\\n    // --------------------------------------------------------------------------------------------------------\\n\\n    function DECIMAL_PRECISION() external view returns (uint256);\\n\\n    function _100pct() external view returns (uint256);\\n\\n    function addNewCollateral(\\n        address _collateral,\\n        uint256 _debtTokenGasCompensation,\\n        uint256 _decimals\\n    )\\n        external;\\n\\n    function setCollateralParameters(\\n        address _collateral,\\n        uint256 borrowingFee,\\n        uint256 ccr,\\n        uint256 mcr,\\n        uint256 minNetDebt,\\n        uint256 mintCap,\\n        uint256 percentDivisor,\\n        uint256 redemptionFeeFloor\\n    )\\n        external;\\n\\n    function setMCR(address _collateral, uint256 newMCR) external;\\n\\n    function setCCR(address _collateral, uint256 newCCR) external;\\n\\n    function setMinNetDebt(address _collateral, uint256 minNetDebt) external;\\n\\n    function setPercentDivisor(address _collateral, uint256 precentDivisor) external;\\n\\n    function setBorrowingFee(address _collateral, uint256 borrowingFee) external;\\n\\n    function setRedemptionFeeFloor(address _collateral, uint256 redemptionFeeFloor) external;\\n\\n    function setMintCap(address _collateral, uint256 mintCap) external;\\n\\n    function setRedemptionBlockTimestamp(address _collateral, uint256 _blockTimestamp) external;\\n\\n    function getIndex(address _collateral) external view returns (uint256);\\n\\n    function getIsActive(address _collateral) external view returns (bool);\\n\\n    function getValidCollateral() external view returns (address[] memory);\\n\\n    function getMcr(address _collateral) external view returns (uint256);\\n\\n    function getCcr(address _collateral) external view returns (uint256);\\n\\n    function getDebtTokenGasCompensation(address _collateral) external view returns (uint256);\\n\\n    function getMinNetDebt(address _collateral) external view returns (uint256);\\n\\n    function getPercentDivisor(address _collateral) external view returns (uint256);\\n\\n    function getBorrowingFee(address _collateral) external view returns (uint256);\\n\\n    function getRedemptionFeeFloor(address _collateral) external view returns (uint256);\\n\\n    function getRedemptionBlockTimestamp(address _collateral) external view returns (uint256);\\n\\n    function getMintCap(address _collateral) external view returns (uint256);\\n\\n    function getTotalAssetDebt(address _asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8284e5438e9411a75b0f2ca44f43fb946ee42aad11d548c9fff10de4aec7602f\",\"license\":\"MIT\"},\"contracts/Interfaces/IDefaultPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { IPool } from \\\"./IPool.sol\\\";\\n\\ninterface IDefaultPool is IPool {\\n    // --- Events ---\\n    event DefaultPoolDebtUpdated(address _asset, uint256 _debt);\\n    event DefaultPoolAssetBalanceUpdated(address _asset, uint256 _balance);\\n\\n    // --- Functions ---\\n    function sendAssetToActivePool(address _asset, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xe68312fe3192b59bea18d1c3f027842418c10ad647f3e282bace8417ba656327\",\"license\":\"MIT\"},\"contracts/Interfaces/IDeposit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\ninterface IDeposit {\\n    function receivedERC20(address _asset, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x2791510cd93e4aab04349c67b20fc52ac0af5ac9aed9b1c12e10743d1f1f7e61\",\"license\":\"MIT\"},\"contracts/Interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { IDeposit } from \\\"./IDeposit.sol\\\";\\n\\ninterface IPool is IDeposit {\\n    // --- Events ---\\n\\n    event AssetSent(address _to, address indexed _asset, uint256 _amount);\\n\\n    // --- Functions ---\\n\\n    function getAssetBalance(address _asset) external view returns (uint256);\\n\\n    function getDebtTokenBalance(address _asset) external view returns (uint256);\\n\\n    function increaseDebt(address _asset, uint256 _amount) external;\\n\\n    function decreaseDebt(address _asset, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xa97342dc61c23cbb4be7afe6d224fa866fc28d7c007a6e940e8252dd9194b1aa\",\"license\":\"MIT\"},\"contracts/Interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\n/*\\n* @dev from\\nhttps://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\n */\\ninterface ChainlinkAggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\\ninterface IPriceFeed {\\n    // Enums\\n    // ----------------------------------------------------------------------------------------------------------\\n\\n    enum ProviderType {\\n        Chainlink,\\n        API3\\n    }\\n\\n    // Structs\\n    // --------------------------------------------------------------------------------------------------------\\n\\n    struct OracleRecordV2 {\\n        address oracleAddress;\\n        ProviderType providerType;\\n        uint256 timeoutSeconds;\\n        uint256 decimals;\\n        bool isEthIndexed;\\n    }\\n\\n    /// @dev Deprecated, but retained for upgradeability\\n    struct OracleRecord {\\n        address chainLinkOracle;\\n        uint256 maxDeviationBetweenRounds;\\n        bool exists;\\n        bool isFeedWorking;\\n        bool isEthIndexed;\\n    }\\n\\n    /// @dev Deprecated, but retained for upgradeability\\n    struct PriceRecord {\\n        uint256 scaledPrice;\\n        uint256 timestamp;\\n    }\\n\\n    /// @dev Deprecated, but retained for upgradeability\\n    struct FeedResponse {\\n        uint80 roundId;\\n        int256 answer;\\n        uint256 timestamp;\\n        bool success;\\n        uint8 decimals;\\n    }\\n\\n    // Custom Errors\\n    // --------------------------------------------------------------------------------------------------\\n\\n    error PriceFeed__ExistingOracleRequired();\\n    error PriceFeed__InvalidDecimalsError();\\n    error PriceFeed__InvalidOracleResponseError(address token);\\n    error PriceFeed__TimelockOnlyError();\\n    error PriceFeed__UnknownAssetError();\\n\\n    // Events\\n    // ---------------------------------------------------------------------------------------------------------\\n\\n    event NewOracleRegistered(\\n        address token, address oracleAddress, bool isEthIndexed, bool isFallback\\n    );\\n\\n    // Functions\\n    // ------------------------------------------------------------------------------------------------------\\n\\n    function fetchPrice(address _token) external view returns (uint256);\\n\\n    function setOracle(\\n        address _token,\\n        address _oracle,\\n        ProviderType _type,\\n        uint256 _timeoutSeconds,\\n        bool _isEthIndexed,\\n        bool _isFallback\\n    )\\n        external;\\n}\\n\",\"keccak256\":\"0xf0c82fbfb780e4eff5d3fce5a6b38af415f42a2daec9c3bfb4cfa5d17764532c\",\"license\":\"MIT\"},\"contracts/Interfaces/IStabilityPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nimport { IDeposit } from \\\"./IDeposit.sol\\\";\\n\\ninterface IStabilityPool is IDeposit {\\n    // --- Structs ---\\n\\n    struct Snapshots {\\n        mapping(address => uint256) S;\\n        uint256 P;\\n        uint256 G;\\n        uint128 scale;\\n        uint128 epoch;\\n    }\\n\\n    // --- Events ---\\n\\n    event CommunityIssuanceAddressChanged(address newAddress);\\n    event DepositSnapshotUpdated(address indexed _depositor, uint256 _P, uint256 _G);\\n    event SystemSnapshotUpdated(uint256 _P, uint256 _G);\\n\\n    event AssetSent(address _asset, address _to, uint256 _amount);\\n    event GainsWithdrawn(\\n        address indexed _depositor,\\n        address[] _collaterals,\\n        uint256[] _amounts,\\n        uint256 _debtTokenLoss\\n    );\\n    event TRENPaidToDepositor(address indexed _depositor, uint256 _TREN);\\n    event StabilityPoolAssetBalanceUpdated(address _asset, uint256 _newBalance);\\n    event StabilityPoolDebtTokenBalanceUpdated(uint256 _newBalance);\\n    event StakeChanged(uint256 _newSystemStake, address _depositor);\\n    event UserDepositChanged(address indexed _depositor, uint256 _newDeposit);\\n\\n    event P_Updated(uint256 _P);\\n    event S_Updated(address _asset, uint256 _S, uint128 _epoch, uint128 _scale);\\n    event G_Updated(uint256 _G, uint128 _epoch, uint128 _scale);\\n    event EpochUpdated(uint128 _currentEpoch);\\n    event ScaleUpdated(uint128 _currentScale);\\n\\n    // --- Errors ---\\n\\n    error StabilityPool__ActivePoolOnly(address sender, address expected);\\n    error StabilityPool__AdminContractOnly(address sender, address expected);\\n    error StabilityPool__TrenBoxManagerOnly(address sender, address expected);\\n    error StabilityPool__ArrayNotInAscendingOrder();\\n\\n    // --- Functions ---\\n\\n    function addCollateralType(address _collateral) external;\\n\\n    /*\\n     * Initial checks:\\n     * - _amount is not zero\\n     * ---\\n    * - Triggers a TREN issuance, based on time passed since the last issuance. The TREN issuance is\\n    shared between *all* depositors.\\n     * - Sends depositor's accumulated gains (TREN, assets) to depositor\\n     */\\n    function provideToSP(uint256 _amount, address[] calldata _assets) external;\\n\\n    /*\\n     * Initial checks:\\n     * - _amount is zero or there are no under collateralized trenBoxes left in the system\\n     * - User has a non zero deposit\\n     * ---\\n    * - Triggers a TREN issuance, based on time passed since the last issuance. The TREN issuance is\\n    shared between *all* depositors.\\n     * - Sends all depositor's accumulated gains (TREN, assets) to depositor\\n     * - Decreases deposit's stake, and takes new snapshots.\\n     *\\n     * If _amount > userDeposit, the user withdraws all of their compounded deposit.\\n     */\\n    function withdrawFromSP(uint256 _amount, address[] calldata _assets) external;\\n\\n    /*\\n    Initial checks:\\n    * - Caller is TrenBoxManager\\n    * ---\\n    * Cancels out the specified debt against the debt token contained in the Stability Pool (as far\\n    as possible)\\n    * and transfers the TrenBox's collateral from ActivePool to StabilityPool.\\n    * Only called by liquidation functions in the TrenBoxManager.\\n    */\\n    function offset(uint256 _debt, address _asset, uint256 _coll) external;\\n\\n    /*\\n    * Returns debt tokens held in the pool. Changes when users deposit/withdraw, and when TrenBox\\n    debt is offset.\\n     */\\n    function getTotalDebtTokenDeposits() external view returns (uint256);\\n\\n    /*\\n     * Calculates the asset gains earned by the deposit since its last snapshots were taken.\\n     */\\n    function getDepositorGains(\\n        address _depositor,\\n        address[] calldata _assets\\n    )\\n        external\\n        view\\n        returns (address[] memory, uint256[] memory);\\n\\n    /*\\n     * Calculate the TREN gain earned by a deposit since its last snapshots were taken.\\n     */\\n    function getDepositorTRENGain(address _depositor) external view returns (uint256);\\n\\n    /*\\n     * Return the user's compounded deposits.\\n     */\\n    function getCompoundedDebtTokenDeposits(address _depositor) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe6de08cb9a9ddb600e67363917078a6778b683187a559a53b0c7c24759ca7a28\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523060805234801561001457600080fd5b5060805161329961003e600039600081816128bd015281816128e60152612a2c01526132996000f3fe6080604052600436106103fa5760003560e01c806391bbfd0d11610213578063c08261db11610123578063f1c05a7e116100ab578063f73acf6a1161007a578063f73acf6a14610cb3578063f7e37b8d14610cd3578063f8d8989814610cef578063fe06073314610d0f578063fe9d032314610d2f57600080fd5b8063f1c05a7e14610c1d578063f2ecdcae14610c3d578063f2fde38b14610c5a578063f454249414610c7a57600080fd5b8063c8564c62116100f2578063c8564c6214610b87578063cc8b21e414610ba8578063cda775f914610bc8578063cf54aaa014610be8578063e8ff898614610c0857600080fd5b8063c08261db14610aee578063c0c067a414610b27578063c415b95c14610b47578063c5f956af14610b6757600080fd5b8063a72bd4e8116101a6578063af7047d811610175578063af7047d814610a35578063b31610db14610a6e578063b957172114610a8e578063c05c5e9414610aae578063c06abe7714610ace57600080fd5b8063a72bd4e8146109ae578063a80f9aee146109c4578063ad3cb1cc146109e4578063aebe1ccb14610a1557600080fd5b8063a142f35a116101e2578063a142f35a1461094e578063a17e64cc146108a3578063a20baee614610711578063a3f4df7e1461096857600080fd5b806391bbfd0d146108be57806395fb16bb146108f75780639d6aea0a146109175780639d8d5a171461093957600080fd5b806355dafa461161030e57806378aaf4de116102a15780638129fc1c116102705780638129fc1c1461082057806386d10e8c1461083557806388ecb0db1461086e5780638da5cb5b1461088e57806390b988c6146108a357600080fd5b806378aaf4de1461078d5780637a305122146107c65780637c120312146107e45780637f7dde4a1461080057600080fd5b806372fe25aa116102dd57806372fe25aa14610711578063741bef1a1461072d57806375e1c3d81461074d57806377553ad41461076d57600080fd5b806355dafa461461068357806362d460da146106a35780636a85d67d146106dc578063715018a6146106fc57600080fd5b80632a6e7603116103915780633f8f5f42116103605780633f8f5f42146105e2578063443c4fcb146106025780634bc66f321461063b5780634f1ef2861461065b57806352d1902d1461066e57600080fd5b80632a6e76031461053c5780632d79b8eb1461055c578063300581d9146105895780633cc74225146105c257600080fd5b80630e8dfa81116103cd5780630e8dfa811461049e5780630fe66cdd146104be57806317ae1fc5146104de57806318a151131461050e57600080fd5b806301c93100146103ff578063048c661d146104215780630a34d4d61461045e5780630bc028c21461047e575b600080fd5b34801561040b57600080fd5b5061041f61041a366004612d39565b610d4f565b005b34801561042d57600080fd5b50600c54610441906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561046a57600080fd5b50601054610441906001600160a01b031681565b34801561048a57600080fd5b5061041f610499366004612d54565b610d79565b3480156104aa57600080fd5b5061041f6104b9366004612d54565b610f07565b3480156104ca57600080fd5b5061041f6104d9366004612d7e565b61108b565b3480156104ea57600080fd5b506104fe6104f9366004612d39565b61112d565b6040519015158152602001610455565b34801561051a57600080fd5b5061052e610529366004612d39565b61115c565b604051908152602001610455565b34801561054857600080fd5b50610441610557366004612dba565b611249565b34801561056857600080fd5b5061057c610577366004612e1a565b611273565b6040516104559190612ec7565b34801561059557600080fd5b5061052e6105a4366004612d39565b6001600160a01b031660009081526032602052604090206003015490565b3480156105ce57600080fd5b50600654610441906001600160a01b031681565b3480156105ee57600080fd5b5061041f6105fd366004612d54565b611358565b34801561060e57600080fd5b5061052e61061d366004612d39565b6001600160a01b03166000908152603260205260409020600a015490565b34801561064757600080fd5b50600d54610441906001600160a01b031681565b61041f610669366004612f0b565b6114cc565b34801561067a57600080fd5b5061052e6114eb565b34801561068f57600080fd5b50600954610441906001600160a01b031681565b3480156106af57600080fd5b5061052e6106be366004612d39565b6001600160a01b031660009081526032602052604090206004015490565b3480156106e857600080fd5b5061041f6106f7366004612d39565b611508565b34801561070857600080fd5b5061041f611532565b34801561071d57600080fd5b5061052e670de0b6b3a764000081565b34801561073957600080fd5b50600a54610441906001600160a01b031681565b34801561075957600080fd5b5061041f610768366004612d54565b611546565b34801561077957600080fd5b50600254610441906001600160a01b031681565b34801561079957600080fd5b5061052e6107a8366004612d39565b6001600160a01b031660009081526032602052604090206005015490565b3480156107d257600080fd5b5061052e69d3c21bcecceda100000081565b3480156107f057600080fd5b5061052e670f43fc2c04ee000081565b34801561080c57600080fd5b50600054610441906001600160a01b031681565b34801561082c57600080fd5b5061041f6116b7565b34801561084157600080fd5b5061052e610850366004612d39565b6001600160a01b031660009081526032602052604090206007015490565b34801561087a57600080fd5b5061041f610889366004612d54565b6117d0565b34801561089a57600080fd5b50610441611944565b3480156108af57600080fd5b5061052e6611c37937e0800081565b3480156108ca57600080fd5b5061052e6108d9366004612d39565b6001600160a01b031660009081526032602052604090206008015490565b34801561090357600080fd5b50600454610441906001600160a01b031681565b34801561092357600080fd5b5061092c611972565b6040516104559190612fb1565b34801561094557600080fd5b5061052e60c881565b34801561095a57600080fd5b506034546104fe9060ff1681565b34801561097457600080fd5b506109a16040518060400160405280600d81526020016c10591b5a5b90dbdb9d1c9858dd609a1b81525081565b6040516104559190613042565b3480156109ba57600080fd5b5061052e60001981565b3480156109d057600080fd5b5061041f6109df366004612d54565b6119d4565b3480156109f057600080fd5b506109a1604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610a2157600080fd5b5061041f610a30366004612d54565b611b4a565b348015610a4157600080fd5b5061052e610a50366004612d39565b6001600160a01b031660009081526032602052604090206009015490565b348015610a7a57600080fd5b5061052e610a89366004612d39565b611c19565b348015610a9a57600080fd5b5061041f610aa9366004613055565b611c45565b348015610aba57600080fd5b50600154610441906001600160a01b031681565b348015610ada57600080fd5b5061041f610ae9366004612d54565b6121bf565b348015610afa57600080fd5b5061052e610b09366004612d39565b6001600160a01b031660009081526032602052604090206006015490565b348015610b3357600080fd5b5061041f610b423660046130ca565b612299565b348015610b5357600080fd5b50600754610441906001600160a01b031681565b348015610b7357600080fd5b50600e54610441906001600160a01b031681565b348015610b9357600080fd5b506010546104fe90600160a01b900460ff1681565b348015610bb457600080fd5b50600b54610441906001600160a01b031681565b348015610bd457600080fd5b50600354610441906001600160a01b031681565b348015610bf457600080fd5b5061052e610c03366004612d39565b612383565b348015610c1457600080fd5b5061041f6123ac565b348015610c2957600080fd5b50600f54610441906001600160a01b031681565b348015610c4957600080fd5b5061052e686c6b935b8bbd40000081565b348015610c6657600080fd5b5061041f610c75366004612d39565b61242f565b348015610c8657600080fd5b5061052e610c95366004612d39565b6001600160a01b03166000908152603260205260409020600b015490565b348015610cbf57600080fd5b5061041f610cce366004613126565b61246d565b348015610cdf57600080fd5b5061052e6714d1120d7b16000081565b348015610cfb57600080fd5b50600554610441906001600160a01b031681565b348015610d1b57600080fd5b5061041f610d2a366004612d39565b61280d565b348015610d3b57600080fd5b50600854610441906001600160a01b031681565b610d57612816565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60345460ff1615610db457600d546001600160a01b03163314610daf57604051631dc5ba9560e01b815260040160405180910390fd5b610ded565b610dbc611944565b6001600160a01b0316336001600160a01b031614610ded5760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600c81526b135a5b8813995d081119589d60a21b6020808301919091526001600160a01b038516600090815260329091529182206002015490918491849190686c6b935b8bbd4000009060ff16610e685760405162461bcd60e51b8152600401610e5f90613159565b60405180910390fd5b81831080610e7557508083115b15610e9b5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600781018054908a905583518181529283018a9052909290917f794abdbe21b3b4556467be6af2b2d5e75ae16613bd128dbd47c3727bd52b4b5591015b60405180910390a1505050505050505050565b60345460ff1615610f4257600d546001600160a01b03163314610f3d57604051631dc5ba9560e01b815260040160405180910390fd5b610f7b565b610f4a611944565b6001600160a01b0316336001600160a01b031614610f7b5760405163ec4adddf60e01b815260040160405180910390fd5b60408051808201825260148152732932b232b6b83a34b7b7102332b290233637b7b960611b6020808301919091526001600160a01b0385166000908152603290915291909120600201548390839066038d7ea4c680009067016345785d8a00009060ff16610ffb5760405162461bcd60e51b8152600401610e5f90613159565b8183108061100857508083115b1561102e5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600a81018054908a905583518181529283018a9052909290917fbb07ced1b1536afc600a5d97cba6e4b294731026286cddc33b98cb2d18569ab79101610ef4565b60345460ff16156110c657600d546001600160a01b031633146110c157604051631dc5ba9560e01b815260040160405180910390fd5b6110ff565b6110ce611944565b6001600160a01b0316336001600160a01b0316146110ff5760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b03919091166000908152603260205260409020600201805460ff1916911515919091179055565b60008161113981612848565b50506001600160a01b031660009081526032602052604090206002015460ff1690565b60065460405163c5739d0b60e01b81526001600160a01b038381166004830152600092169063c5739d0b90602401602060405180830381865afa1580156111a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb91906131e5565b60005460405163c5739d0b60e01b81526001600160a01b0385811660048301529091169063c5739d0b90602401602060405180830381865afa158015611215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123991906131e5565b6112439190613214565b92915050565b6033818154811061125957600080fd5b6000918252602090912001546001600160a01b0316905081565b80516060908067ffffffffffffffff81111561129157611291612dd3565b6040519080825280602002602001820160405280156112ba578160200160208202803683370190505b50915060005b81811015611351576112ea8482815181106112dd576112dd613227565b6020026020010151612848565b6032600085838151811061130057611300613227565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206001015483828151811061133e5761133e613227565b60209081029190910101526001016112c0565b5050919050565b60345460ff161561139357600d546001600160a01b0316331461138e57604051631dc5ba9560e01b815260040160405180910390fd5b6113cc565b61139b611944565b6001600160a01b0316336001600160a01b0316146113cc5760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600381526221a1a960e91b6020808301919091526001600160a01b03851660009081526032909152919091206002015483908390670de0b6b3a764000090678ac7230489e800009060ff1661143c5760405162461bcd60e51b8152600401610e5f90613159565b8183108061144957508083115b1561146f5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600481018054908a905583518181529283018a9052909290917f8fef8cb3d376ea764ea9e41cc4380bb23ed262ed1883cfd0ee00f4b08a288b699101610ef4565b6114d46128b2565b6114dd82612957565b6114e7828261295f565b5050565b60006114f5612a21565b5060008051602061326d83398151915290565b611510612816565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b61153a612816565b6115446000612a6a565b565b60345460ff161561158157600d546001600160a01b0316331461157c57604051631dc5ba9560e01b815260040160405180910390fd5b6115ba565b611589611944565b6001600160a01b0316336001600160a01b0316146115ba5760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600f81526e2832b931b2b73a102234bb34b9b7b960891b6020808301919091526001600160a01b03851660009081526032909152919091206002908101548491849160c89060ff166116275760405162461bcd60e51b8152600401610e5f90613159565b8183108061163457508083115b1561165a5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600981018054908a905583518181529283018a9052909290917fdfb04317e088794badba78956b7c092fac7986add660c0fc3d01569808c32b369101610ef4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156116fd5750825b905060008267ffffffffffffffff16600114801561171a5750303b155b905081158015611728575080155b156117465760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561177057845460ff60401b1916600160401b1785555b3361177a81612adb565b611782612aec565b5083156117c957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b60345460ff161561180b57600d546001600160a01b0316331461180657604051631dc5ba9560e01b815260040160405180910390fd5b611844565b611813611944565b6001600160a01b0316336001600160a01b0316146118445760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600381526226a1a960e91b6020808301919091526001600160a01b03851660009081526032909152919091206002015483908390670e043da61725000090678ac7230489e800009060ff166118b45760405162461bcd60e51b8152600401610e5f90613159565b818310806118c157508083115b156118e75784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600581018054908a905583518181529283018a9052909290917fefeb589e088ecf2bc2a0b6d364f91a4fee37ee6b9c6f089c71169e86f03dc9449101610ef4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b606060338054806020026020016040519081016040528092919081815260200182805480156119ca57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119ac575b5050505050905090565b60345460ff1615611a0f57600d546001600160a01b03163314611a0a57604051631dc5ba9560e01b815260040160405180910390fd5b611a48565b611a17611944565b6001600160a01b0316336001600160a01b031614611a485760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600d81526c426f72726f77696e672046656560981b6020808301919091526001600160a01b03851660009081526032909152918220600201549091849184919067016345785d8a00009060ff16611aba5760405162461bcd60e51b8152600401610e5f90613159565b81831080611ac757508083115b15611aed5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600381018054908a905583518181529283018a9052909290917fa7beab75e7a7d89dcacb5a82b33606192c31b8bbc1868c5240f95abcd95bbeee9101610ef4565b60345460ff1615611b8557600d546001600160a01b03163314611b8057604051631dc5ba9560e01b815260040160405180910390fd5b611bbe565b611b8d611944565b6001600160a01b0316336001600160a01b031614611bbe5760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b038216600081815260326020908152604091829020600b01849055815192835282018390527f2f92337ec07da93d49659c3dbafa91599df53c9c9147edcff44eabc99d945950910160405180910390a15050565b600081611c2581612848565b50506001600160a01b031660009081526032602052604090206001015490565b611c4d612816565b601054600160a01b900460ff1615611ca75760405162461bcd60e51b815260206004820152601c60248201527f536574757020697320616c726561647920696e697469616c697a6564000000006044820152606401610e5f565b600f8114611cf75760405162461bcd60e51b815260206004820152601e60248201527f45787065637465642031352061646472657373657320617420736574757000006044820152606401610e5f565b60005b600f811015611d7c576000838383818110611d1757611d17613227565b9050602002016020810190611d2c9190612d39565b6001600160a01b031603611d745760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610e5f565b600101611cfa565b5081816000818110611d9057611d90613227565b9050602002016020810190611da59190612d39565b600080546001600160a01b0319166001600160a01b039290921691909117905581816001818110611dd857611dd8613227565b9050602002016020810190611ded9190612d39565b600180546001600160a01b0319166001600160a01b039290921691909117905581816002818110611e2057611e20613227565b9050602002016020810190611e359190612d39565b600280546001600160a01b0319166001600160a01b039290921691909117905581816003818110611e6857611e68613227565b9050602002016020810190611e7d9190612d39565b600380546001600160a01b0319166001600160a01b039290921691909117905581816004818110611eb057611eb0613227565b9050602002016020810190611ec59190612d39565b600580546001600160a01b0319166001600160a01b039290921691909117815582908290818110611ef857611ef8613227565b9050602002016020810190611f0d9190612d39565b600680546001600160a01b0319166001600160a01b039290921691909117815582908290818110611f4057611f40613227565b9050602002016020810190611f559190612d39565b600780546001600160a01b0319166001600160a01b039290921691909117815582908290818110611f8857611f88613227565b9050602002016020810190611f9d9190612d39565b600880546001600160a01b0319166001600160a01b039290921691909117815582908290818110611fd057611fd0613227565b9050602002016020810190611fe59190612d39565b600a80546001600160a01b0319166001600160a01b03929092169190911790558181600981811061201857612018613227565b905060200201602081019061202d9190612d39565b600b80546001600160a01b0319166001600160a01b03929092169190911790558181600a81811061206057612060613227565b90506020020160208101906120759190612d39565b600c80546001600160a01b0319166001600160a01b03929092169190911790558181600b8181106120a8576120a8613227565b90506020020160208101906120bd9190612d39565b600d80546001600160a01b0319166001600160a01b03929092169190911790558181600c8181106120f0576120f0613227565b90506020020160208101906121059190612d39565b600e80546001600160a01b0319166001600160a01b03929092169190911790558181600d81811061213857612138613227565b905060200201602081019061214d9190612d39565b600f80546001600160a01b0319166001600160a01b03929092169190911790558181600e81811061218057612180613227565b90506020020160208101906121959190612d39565b601080546001600160a81b0319166001600160a01b039290921691909117600160a01b1790555050565b60345460ff16156121fa57600d546001600160a01b031633146121f557604051631dc5ba9560e01b815260040160405180910390fd5b612233565b612202611944565b6001600160a01b0316336001600160a01b0316146122335760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b038216600090815260326020908152604091829020600881018054908590558351818152928301859052909290917f903452cfae6c90575a1e7327283877d56dda9ed43a4711f44bf796e103e4e120910160405180910390a150505050565b60345460ff16156122d457600d546001600160a01b031633146122cf57604051631dc5ba9560e01b815260040160405180910390fd5b61230d565b6122dc611944565b6001600160a01b0316336001600160a01b03161461230d5760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b0388166000908152603260205260409020600201805460ff1916600117905561233d88886119d4565b6123478887611358565b61235188866117d0565b61235b8885610d79565b61236588846121bf565b61236f8883611546565b6123798882610f07565b5050505050505050565b60008161238f81612848565b50506001600160a01b031660009081526032602052604090205490565b60345460ff16156123e757600d546001600160a01b031633146123e257604051631dc5ba9560e01b815260040160405180910390fd5b612420565b6123ef611944565b6001600160a01b0316336001600160a01b0316146124205760405163ec4adddf60e01b815260040160405180910390fd5b6034805460ff19166001179055565b612437612816565b6001600160a01b03811661246157604051631e4fbdf760e01b815260006004820152602401610e5f565b61246a81612a6a565b50565b60345460ff16156124a857600d546001600160a01b031633146124a357604051631dc5ba9560e01b815260040160405180910390fd5b6124e1565b6124b0611944565b6001600160a01b0316336001600160a01b0316146124e15760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b0383166000908152603260205260409020600501541561254a5760405162461bcd60e51b815260206004820152601960248201527f636f6c6c61746572616c20616c726561647920657869737473000000000000006044820152606401610e5f565b601281146125ad5760405162461bcd60e51b815260206004820152602a60248201527f636f6c6c61746572616c73206d7573742068617665207468652064656661756c6044820152697420646563696d616c7360b01b6064820152608401610e5f565b603380546001808201835560008390527f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a8290910180546001600160a01b0319166001600160a01b038716179055604080516101808101909152838152915460208301916126199161323d565b81526020016000151581526020016611c37937e0800081526020016714d1120d7b1600008152602001670f43fc2c04ee00008152602001838152602001686c6b935b8bbd400000815260200169d3c21bcecceda1000000815260200160c881526020016611c37937e08000815260200160001981525060326000856001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0155905050600c60009054906101000a90046001600160a01b03166001600160a01b031663ec0d5e0c846040518263ffffffff1660e01b815260040161279991906001600160a01b0391909116815260200190565b600060405180830381600087803b1580156127b357600080fd5b505af11580156127c7573d6000803e3d6000fd5b50506040516001600160a01b03861681527f7db05e63d635a68c62fd7fd8f3107ae8ab584a383e102d1bd8a40f4c977e465f9250602001905060405180910390a1505050565b61246a81612957565b3361281f611944565b6001600160a01b0316146115445760405163118cdaa760e01b8152336004820152602401610e5f565b6001600160a01b038116600090815260326020526040812060050154900361246a5760405162461bcd60e51b815260206004820152601960248201527f636f6c6c61746572616c20646f6573206e6f74206578697374000000000000006044820152606401610e5f565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061293957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661292d60008051602061326d833981519152546001600160a01b031690565b6001600160a01b031614155b156115445760405163703e46dd60e11b815260040160405180910390fd5b61246a612816565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156129b9575060408051601f3d908101601f191682019092526129b6918101906131e5565b60015b6129e157604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e5f565b60008051602061326d8339815191528114612a1257604051632a87526960e21b815260048101829052602401610e5f565b612a1c8383612af4565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115445760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b612ae3612b4a565b61246a81612b93565b611544612b4a565b612afd82612b9b565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115612b4257612a1c8282612c00565b6114e7612c76565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661154457604051631afcd79f60e31b815260040160405180910390fd5b612437612b4a565b806001600160a01b03163b600003612bd157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e5f565b60008051602061326d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051612c1d9190613250565b600060405180830381855af49150503d8060008114612c58576040519150601f19603f3d011682016040523d82523d6000602084013e612c5d565b606091505b5091509150612c6d858383612c95565b95945050505050565b34156115445760405163b398979f60e01b815260040160405180910390fd5b606082612caa57612ca582612cf4565b612ced565b8151158015612cc157506001600160a01b0384163b155b15612cea57604051639996b31560e01b81526001600160a01b0385166004820152602401610e5f565b50805b9392505050565b805115612d045780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b0381168114612d3457600080fd5b919050565b600060208284031215612d4b57600080fd5b612ced82612d1d565b60008060408385031215612d6757600080fd5b612d7083612d1d565b946020939093013593505050565b60008060408385031215612d9157600080fd5b612d9a83612d1d565b915060208301358015158114612daf57600080fd5b809150509250929050565b600060208284031215612dcc57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612e1257612e12612dd3565b604052919050565b60006020808385031215612e2d57600080fd5b823567ffffffffffffffff80821115612e4557600080fd5b818501915085601f830112612e5957600080fd5b813581811115612e6b57612e6b612dd3565b8060051b9150612e7c848301612de9565b8181529183018401918481019088841115612e9657600080fd5b938501935b83851015612ebb57612eac85612d1d565b82529385019390850190612e9b565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612eff57835183529284019291840191600101612ee3565b50909695505050505050565b60008060408385031215612f1e57600080fd5b612f2783612d1d565b915060208084013567ffffffffffffffff80821115612f4557600080fd5b818601915086601f830112612f5957600080fd5b813581811115612f6b57612f6b612dd3565b612f7d601f8201601f19168501612de9565b91508082528784828501011115612f9357600080fd5b80848401858401376000848284010152508093505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612eff5783516001600160a01b031683529284019291840191600101612fcd565b60005b8381101561300d578181015183820152602001612ff5565b50506000910152565b6000815180845261302e816020860160208601612ff2565b601f01601f19169290920160200192915050565b602081526000612ced6020830184613016565b6000806020838503121561306857600080fd5b823567ffffffffffffffff8082111561308057600080fd5b818501915085601f83011261309457600080fd5b8135818111156130a357600080fd5b8660208260051b85010111156130b857600080fd5b60209290920196919550909350505050565b600080600080600080600080610100898b0312156130e757600080fd5b6130f089612d1d565b9a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e00135945092505050565b60008060006060848603121561313b57600080fd5b61314484612d1d565b95602085013595506040909401359392505050565b60208082526039908201527f436f6c6c61746572616c206973206e6f7420636f6e666967757265642c20757360408201527f6520736574436f6c6c61746572616c506172616d657465727300000000000000606082015260800190565b6080815260006131c96080830187613016565b6020830195909552506040810192909252606090910152919050565b6000602082840312156131f757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611243576112436131fe565b634e487b7160e01b600052603260045260246000fd5b81810381811115611243576112436131fe565b60008251613262818460208701612ff2565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca164736f6c6343000817000a",
  "deployedBytecode": "0x6080604052600436106103fa5760003560e01c806391bbfd0d11610213578063c08261db11610123578063f1c05a7e116100ab578063f73acf6a1161007a578063f73acf6a14610cb3578063f7e37b8d14610cd3578063f8d8989814610cef578063fe06073314610d0f578063fe9d032314610d2f57600080fd5b8063f1c05a7e14610c1d578063f2ecdcae14610c3d578063f2fde38b14610c5a578063f454249414610c7a57600080fd5b8063c8564c62116100f2578063c8564c6214610b87578063cc8b21e414610ba8578063cda775f914610bc8578063cf54aaa014610be8578063e8ff898614610c0857600080fd5b8063c08261db14610aee578063c0c067a414610b27578063c415b95c14610b47578063c5f956af14610b6757600080fd5b8063a72bd4e8116101a6578063af7047d811610175578063af7047d814610a35578063b31610db14610a6e578063b957172114610a8e578063c05c5e9414610aae578063c06abe7714610ace57600080fd5b8063a72bd4e8146109ae578063a80f9aee146109c4578063ad3cb1cc146109e4578063aebe1ccb14610a1557600080fd5b8063a142f35a116101e2578063a142f35a1461094e578063a17e64cc146108a3578063a20baee614610711578063a3f4df7e1461096857600080fd5b806391bbfd0d146108be57806395fb16bb146108f75780639d6aea0a146109175780639d8d5a171461093957600080fd5b806355dafa461161030e57806378aaf4de116102a15780638129fc1c116102705780638129fc1c1461082057806386d10e8c1461083557806388ecb0db1461086e5780638da5cb5b1461088e57806390b988c6146108a357600080fd5b806378aaf4de1461078d5780637a305122146107c65780637c120312146107e45780637f7dde4a1461080057600080fd5b806372fe25aa116102dd57806372fe25aa14610711578063741bef1a1461072d57806375e1c3d81461074d57806377553ad41461076d57600080fd5b806355dafa461461068357806362d460da146106a35780636a85d67d146106dc578063715018a6146106fc57600080fd5b80632a6e7603116103915780633f8f5f42116103605780633f8f5f42146105e2578063443c4fcb146106025780634bc66f321461063b5780634f1ef2861461065b57806352d1902d1461066e57600080fd5b80632a6e76031461053c5780632d79b8eb1461055c578063300581d9146105895780633cc74225146105c257600080fd5b80630e8dfa81116103cd5780630e8dfa811461049e5780630fe66cdd146104be57806317ae1fc5146104de57806318a151131461050e57600080fd5b806301c93100146103ff578063048c661d146104215780630a34d4d61461045e5780630bc028c21461047e575b600080fd5b34801561040b57600080fd5b5061041f61041a366004612d39565b610d4f565b005b34801561042d57600080fd5b50600c54610441906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561046a57600080fd5b50601054610441906001600160a01b031681565b34801561048a57600080fd5b5061041f610499366004612d54565b610d79565b3480156104aa57600080fd5b5061041f6104b9366004612d54565b610f07565b3480156104ca57600080fd5b5061041f6104d9366004612d7e565b61108b565b3480156104ea57600080fd5b506104fe6104f9366004612d39565b61112d565b6040519015158152602001610455565b34801561051a57600080fd5b5061052e610529366004612d39565b61115c565b604051908152602001610455565b34801561054857600080fd5b50610441610557366004612dba565b611249565b34801561056857600080fd5b5061057c610577366004612e1a565b611273565b6040516104559190612ec7565b34801561059557600080fd5b5061052e6105a4366004612d39565b6001600160a01b031660009081526032602052604090206003015490565b3480156105ce57600080fd5b50600654610441906001600160a01b031681565b3480156105ee57600080fd5b5061041f6105fd366004612d54565b611358565b34801561060e57600080fd5b5061052e61061d366004612d39565b6001600160a01b03166000908152603260205260409020600a015490565b34801561064757600080fd5b50600d54610441906001600160a01b031681565b61041f610669366004612f0b565b6114cc565b34801561067a57600080fd5b5061052e6114eb565b34801561068f57600080fd5b50600954610441906001600160a01b031681565b3480156106af57600080fd5b5061052e6106be366004612d39565b6001600160a01b031660009081526032602052604090206004015490565b3480156106e857600080fd5b5061041f6106f7366004612d39565b611508565b34801561070857600080fd5b5061041f611532565b34801561071d57600080fd5b5061052e670de0b6b3a764000081565b34801561073957600080fd5b50600a54610441906001600160a01b031681565b34801561075957600080fd5b5061041f610768366004612d54565b611546565b34801561077957600080fd5b50600254610441906001600160a01b031681565b34801561079957600080fd5b5061052e6107a8366004612d39565b6001600160a01b031660009081526032602052604090206005015490565b3480156107d257600080fd5b5061052e69d3c21bcecceda100000081565b3480156107f057600080fd5b5061052e670f43fc2c04ee000081565b34801561080c57600080fd5b50600054610441906001600160a01b031681565b34801561082c57600080fd5b5061041f6116b7565b34801561084157600080fd5b5061052e610850366004612d39565b6001600160a01b031660009081526032602052604090206007015490565b34801561087a57600080fd5b5061041f610889366004612d54565b6117d0565b34801561089a57600080fd5b50610441611944565b3480156108af57600080fd5b5061052e6611c37937e0800081565b3480156108ca57600080fd5b5061052e6108d9366004612d39565b6001600160a01b031660009081526032602052604090206008015490565b34801561090357600080fd5b50600454610441906001600160a01b031681565b34801561092357600080fd5b5061092c611972565b6040516104559190612fb1565b34801561094557600080fd5b5061052e60c881565b34801561095a57600080fd5b506034546104fe9060ff1681565b34801561097457600080fd5b506109a16040518060400160405280600d81526020016c10591b5a5b90dbdb9d1c9858dd609a1b81525081565b6040516104559190613042565b3480156109ba57600080fd5b5061052e60001981565b3480156109d057600080fd5b5061041f6109df366004612d54565b6119d4565b3480156109f057600080fd5b506109a1604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610a2157600080fd5b5061041f610a30366004612d54565b611b4a565b348015610a4157600080fd5b5061052e610a50366004612d39565b6001600160a01b031660009081526032602052604090206009015490565b348015610a7a57600080fd5b5061052e610a89366004612d39565b611c19565b348015610a9a57600080fd5b5061041f610aa9366004613055565b611c45565b348015610aba57600080fd5b50600154610441906001600160a01b031681565b348015610ada57600080fd5b5061041f610ae9366004612d54565b6121bf565b348015610afa57600080fd5b5061052e610b09366004612d39565b6001600160a01b031660009081526032602052604090206006015490565b348015610b3357600080fd5b5061041f610b423660046130ca565b612299565b348015610b5357600080fd5b50600754610441906001600160a01b031681565b348015610b7357600080fd5b50600e54610441906001600160a01b031681565b348015610b9357600080fd5b506010546104fe90600160a01b900460ff1681565b348015610bb457600080fd5b50600b54610441906001600160a01b031681565b348015610bd457600080fd5b50600354610441906001600160a01b031681565b348015610bf457600080fd5b5061052e610c03366004612d39565b612383565b348015610c1457600080fd5b5061041f6123ac565b348015610c2957600080fd5b50600f54610441906001600160a01b031681565b348015610c4957600080fd5b5061052e686c6b935b8bbd40000081565b348015610c6657600080fd5b5061041f610c75366004612d39565b61242f565b348015610c8657600080fd5b5061052e610c95366004612d39565b6001600160a01b03166000908152603260205260409020600b015490565b348015610cbf57600080fd5b5061041f610cce366004613126565b61246d565b348015610cdf57600080fd5b5061052e6714d1120d7b16000081565b348015610cfb57600080fd5b50600554610441906001600160a01b031681565b348015610d1b57600080fd5b5061041f610d2a366004612d39565b61280d565b348015610d3b57600080fd5b50600854610441906001600160a01b031681565b610d57612816565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60345460ff1615610db457600d546001600160a01b03163314610daf57604051631dc5ba9560e01b815260040160405180910390fd5b610ded565b610dbc611944565b6001600160a01b0316336001600160a01b031614610ded5760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600c81526b135a5b8813995d081119589d60a21b6020808301919091526001600160a01b038516600090815260329091529182206002015490918491849190686c6b935b8bbd4000009060ff16610e685760405162461bcd60e51b8152600401610e5f90613159565b60405180910390fd5b81831080610e7557508083115b15610e9b5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600781018054908a905583518181529283018a9052909290917f794abdbe21b3b4556467be6af2b2d5e75ae16613bd128dbd47c3727bd52b4b5591015b60405180910390a1505050505050505050565b60345460ff1615610f4257600d546001600160a01b03163314610f3d57604051631dc5ba9560e01b815260040160405180910390fd5b610f7b565b610f4a611944565b6001600160a01b0316336001600160a01b031614610f7b5760405163ec4adddf60e01b815260040160405180910390fd5b60408051808201825260148152732932b232b6b83a34b7b7102332b290233637b7b960611b6020808301919091526001600160a01b0385166000908152603290915291909120600201548390839066038d7ea4c680009067016345785d8a00009060ff16610ffb5760405162461bcd60e51b8152600401610e5f90613159565b8183108061100857508083115b1561102e5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600a81018054908a905583518181529283018a9052909290917fbb07ced1b1536afc600a5d97cba6e4b294731026286cddc33b98cb2d18569ab79101610ef4565b60345460ff16156110c657600d546001600160a01b031633146110c157604051631dc5ba9560e01b815260040160405180910390fd5b6110ff565b6110ce611944565b6001600160a01b0316336001600160a01b0316146110ff5760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b03919091166000908152603260205260409020600201805460ff1916911515919091179055565b60008161113981612848565b50506001600160a01b031660009081526032602052604090206002015460ff1690565b60065460405163c5739d0b60e01b81526001600160a01b038381166004830152600092169063c5739d0b90602401602060405180830381865afa1580156111a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb91906131e5565b60005460405163c5739d0b60e01b81526001600160a01b0385811660048301529091169063c5739d0b90602401602060405180830381865afa158015611215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123991906131e5565b6112439190613214565b92915050565b6033818154811061125957600080fd5b6000918252602090912001546001600160a01b0316905081565b80516060908067ffffffffffffffff81111561129157611291612dd3565b6040519080825280602002602001820160405280156112ba578160200160208202803683370190505b50915060005b81811015611351576112ea8482815181106112dd576112dd613227565b6020026020010151612848565b6032600085838151811061130057611300613227565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206001015483828151811061133e5761133e613227565b60209081029190910101526001016112c0565b5050919050565b60345460ff161561139357600d546001600160a01b0316331461138e57604051631dc5ba9560e01b815260040160405180910390fd5b6113cc565b61139b611944565b6001600160a01b0316336001600160a01b0316146113cc5760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600381526221a1a960e91b6020808301919091526001600160a01b03851660009081526032909152919091206002015483908390670de0b6b3a764000090678ac7230489e800009060ff1661143c5760405162461bcd60e51b8152600401610e5f90613159565b8183108061144957508083115b1561146f5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600481018054908a905583518181529283018a9052909290917f8fef8cb3d376ea764ea9e41cc4380bb23ed262ed1883cfd0ee00f4b08a288b699101610ef4565b6114d46128b2565b6114dd82612957565b6114e7828261295f565b5050565b60006114f5612a21565b5060008051602061326d83398151915290565b611510612816565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b61153a612816565b6115446000612a6a565b565b60345460ff161561158157600d546001600160a01b0316331461157c57604051631dc5ba9560e01b815260040160405180910390fd5b6115ba565b611589611944565b6001600160a01b0316336001600160a01b0316146115ba5760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600f81526e2832b931b2b73a102234bb34b9b7b960891b6020808301919091526001600160a01b03851660009081526032909152919091206002908101548491849160c89060ff166116275760405162461bcd60e51b8152600401610e5f90613159565b8183108061163457508083115b1561165a5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600981018054908a905583518181529283018a9052909290917fdfb04317e088794badba78956b7c092fac7986add660c0fc3d01569808c32b369101610ef4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156116fd5750825b905060008267ffffffffffffffff16600114801561171a5750303b155b905081158015611728575080155b156117465760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561177057845460ff60401b1916600160401b1785555b3361177a81612adb565b611782612aec565b5083156117c957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b60345460ff161561180b57600d546001600160a01b0316331461180657604051631dc5ba9560e01b815260040160405180910390fd5b611844565b611813611944565b6001600160a01b0316336001600160a01b0316146118445760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600381526226a1a960e91b6020808301919091526001600160a01b03851660009081526032909152919091206002015483908390670e043da61725000090678ac7230489e800009060ff166118b45760405162461bcd60e51b8152600401610e5f90613159565b818310806118c157508083115b156118e75784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600581018054908a905583518181529283018a9052909290917fefeb589e088ecf2bc2a0b6d364f91a4fee37ee6b9c6f089c71169e86f03dc9449101610ef4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b606060338054806020026020016040519081016040528092919081815260200182805480156119ca57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119ac575b5050505050905090565b60345460ff1615611a0f57600d546001600160a01b03163314611a0a57604051631dc5ba9560e01b815260040160405180910390fd5b611a48565b611a17611944565b6001600160a01b0316336001600160a01b031614611a485760405163ec4adddf60e01b815260040160405180910390fd5b604080518082018252600d81526c426f72726f77696e672046656560981b6020808301919091526001600160a01b03851660009081526032909152918220600201549091849184919067016345785d8a00009060ff16611aba5760405162461bcd60e51b8152600401610e5f90613159565b81831080611ac757508083115b15611aed5784838383604051630714ded760e31b8152600401610e5f94939291906131b6565b6001600160a01b038716600090815260326020908152604091829020600381018054908a905583518181529283018a9052909290917fa7beab75e7a7d89dcacb5a82b33606192c31b8bbc1868c5240f95abcd95bbeee9101610ef4565b60345460ff1615611b8557600d546001600160a01b03163314611b8057604051631dc5ba9560e01b815260040160405180910390fd5b611bbe565b611b8d611944565b6001600160a01b0316336001600160a01b031614611bbe5760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b038216600081815260326020908152604091829020600b01849055815192835282018390527f2f92337ec07da93d49659c3dbafa91599df53c9c9147edcff44eabc99d945950910160405180910390a15050565b600081611c2581612848565b50506001600160a01b031660009081526032602052604090206001015490565b611c4d612816565b601054600160a01b900460ff1615611ca75760405162461bcd60e51b815260206004820152601c60248201527f536574757020697320616c726561647920696e697469616c697a6564000000006044820152606401610e5f565b600f8114611cf75760405162461bcd60e51b815260206004820152601e60248201527f45787065637465642031352061646472657373657320617420736574757000006044820152606401610e5f565b60005b600f811015611d7c576000838383818110611d1757611d17613227565b9050602002016020810190611d2c9190612d39565b6001600160a01b031603611d745760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610e5f565b600101611cfa565b5081816000818110611d9057611d90613227565b9050602002016020810190611da59190612d39565b600080546001600160a01b0319166001600160a01b039290921691909117905581816001818110611dd857611dd8613227565b9050602002016020810190611ded9190612d39565b600180546001600160a01b0319166001600160a01b039290921691909117905581816002818110611e2057611e20613227565b9050602002016020810190611e359190612d39565b600280546001600160a01b0319166001600160a01b039290921691909117905581816003818110611e6857611e68613227565b9050602002016020810190611e7d9190612d39565b600380546001600160a01b0319166001600160a01b039290921691909117905581816004818110611eb057611eb0613227565b9050602002016020810190611ec59190612d39565b600580546001600160a01b0319166001600160a01b039290921691909117815582908290818110611ef857611ef8613227565b9050602002016020810190611f0d9190612d39565b600680546001600160a01b0319166001600160a01b039290921691909117815582908290818110611f4057611f40613227565b9050602002016020810190611f559190612d39565b600780546001600160a01b0319166001600160a01b039290921691909117815582908290818110611f8857611f88613227565b9050602002016020810190611f9d9190612d39565b600880546001600160a01b0319166001600160a01b039290921691909117815582908290818110611fd057611fd0613227565b9050602002016020810190611fe59190612d39565b600a80546001600160a01b0319166001600160a01b03929092169190911790558181600981811061201857612018613227565b905060200201602081019061202d9190612d39565b600b80546001600160a01b0319166001600160a01b03929092169190911790558181600a81811061206057612060613227565b90506020020160208101906120759190612d39565b600c80546001600160a01b0319166001600160a01b03929092169190911790558181600b8181106120a8576120a8613227565b90506020020160208101906120bd9190612d39565b600d80546001600160a01b0319166001600160a01b03929092169190911790558181600c8181106120f0576120f0613227565b90506020020160208101906121059190612d39565b600e80546001600160a01b0319166001600160a01b03929092169190911790558181600d81811061213857612138613227565b905060200201602081019061214d9190612d39565b600f80546001600160a01b0319166001600160a01b03929092169190911790558181600e81811061218057612180613227565b90506020020160208101906121959190612d39565b601080546001600160a81b0319166001600160a01b039290921691909117600160a01b1790555050565b60345460ff16156121fa57600d546001600160a01b031633146121f557604051631dc5ba9560e01b815260040160405180910390fd5b612233565b612202611944565b6001600160a01b0316336001600160a01b0316146122335760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b038216600090815260326020908152604091829020600881018054908590558351818152928301859052909290917f903452cfae6c90575a1e7327283877d56dda9ed43a4711f44bf796e103e4e120910160405180910390a150505050565b60345460ff16156122d457600d546001600160a01b031633146122cf57604051631dc5ba9560e01b815260040160405180910390fd5b61230d565b6122dc611944565b6001600160a01b0316336001600160a01b03161461230d5760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b0388166000908152603260205260409020600201805460ff1916600117905561233d88886119d4565b6123478887611358565b61235188866117d0565b61235b8885610d79565b61236588846121bf565b61236f8883611546565b6123798882610f07565b5050505050505050565b60008161238f81612848565b50506001600160a01b031660009081526032602052604090205490565b60345460ff16156123e757600d546001600160a01b031633146123e257604051631dc5ba9560e01b815260040160405180910390fd5b612420565b6123ef611944565b6001600160a01b0316336001600160a01b0316146124205760405163ec4adddf60e01b815260040160405180910390fd5b6034805460ff19166001179055565b612437612816565b6001600160a01b03811661246157604051631e4fbdf760e01b815260006004820152602401610e5f565b61246a81612a6a565b50565b60345460ff16156124a857600d546001600160a01b031633146124a357604051631dc5ba9560e01b815260040160405180910390fd5b6124e1565b6124b0611944565b6001600160a01b0316336001600160a01b0316146124e15760405163ec4adddf60e01b815260040160405180910390fd5b6001600160a01b0383166000908152603260205260409020600501541561254a5760405162461bcd60e51b815260206004820152601960248201527f636f6c6c61746572616c20616c726561647920657869737473000000000000006044820152606401610e5f565b601281146125ad5760405162461bcd60e51b815260206004820152602a60248201527f636f6c6c61746572616c73206d7573742068617665207468652064656661756c6044820152697420646563696d616c7360b01b6064820152608401610e5f565b603380546001808201835560008390527f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a8290910180546001600160a01b0319166001600160a01b038716179055604080516101808101909152838152915460208301916126199161323d565b81526020016000151581526020016611c37937e0800081526020016714d1120d7b1600008152602001670f43fc2c04ee00008152602001838152602001686c6b935b8bbd400000815260200169d3c21bcecceda1000000815260200160c881526020016611c37937e08000815260200160001981525060326000856001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0155905050600c60009054906101000a90046001600160a01b03166001600160a01b031663ec0d5e0c846040518263ffffffff1660e01b815260040161279991906001600160a01b0391909116815260200190565b600060405180830381600087803b1580156127b357600080fd5b505af11580156127c7573d6000803e3d6000fd5b50506040516001600160a01b03861681527f7db05e63d635a68c62fd7fd8f3107ae8ab584a383e102d1bd8a40f4c977e465f9250602001905060405180910390a1505050565b61246a81612957565b3361281f611944565b6001600160a01b0316146115445760405163118cdaa760e01b8152336004820152602401610e5f565b6001600160a01b038116600090815260326020526040812060050154900361246a5760405162461bcd60e51b815260206004820152601960248201527f636f6c6c61746572616c20646f6573206e6f74206578697374000000000000006044820152606401610e5f565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061293957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661292d60008051602061326d833981519152546001600160a01b031690565b6001600160a01b031614155b156115445760405163703e46dd60e11b815260040160405180910390fd5b61246a612816565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156129b9575060408051601f3d908101601f191682019092526129b6918101906131e5565b60015b6129e157604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e5f565b60008051602061326d8339815191528114612a1257604051632a87526960e21b815260048101829052602401610e5f565b612a1c8383612af4565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115445760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b612ae3612b4a565b61246a81612b93565b611544612b4a565b612afd82612b9b565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115612b4257612a1c8282612c00565b6114e7612c76565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661154457604051631afcd79f60e31b815260040160405180910390fd5b612437612b4a565b806001600160a01b03163b600003612bd157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e5f565b60008051602061326d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051612c1d9190613250565b600060405180830381855af49150503d8060008114612c58576040519150601f19603f3d011682016040523d82523d6000602084013e612c5d565b606091505b5091509150612c6d858383612c95565b95945050505050565b34156115445760405163b398979f60e01b815260040160405180910390fd5b606082612caa57612ca582612cf4565b612ced565b8151158015612cc157506001600160a01b0384163b155b15612cea57604051639996b31560e01b81526001600160a01b0385166004820152602401610e5f565b50805b9392505050565b805115612d045780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b0381168114612d3457600080fd5b919050565b600060208284031215612d4b57600080fd5b612ced82612d1d565b60008060408385031215612d6757600080fd5b612d7083612d1d565b946020939093013593505050565b60008060408385031215612d9157600080fd5b612d9a83612d1d565b915060208301358015158114612daf57600080fd5b809150509250929050565b600060208284031215612dcc57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612e1257612e12612dd3565b604052919050565b60006020808385031215612e2d57600080fd5b823567ffffffffffffffff80821115612e4557600080fd5b818501915085601f830112612e5957600080fd5b813581811115612e6b57612e6b612dd3565b8060051b9150612e7c848301612de9565b8181529183018401918481019088841115612e9657600080fd5b938501935b83851015612ebb57612eac85612d1d565b82529385019390850190612e9b565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612eff57835183529284019291840191600101612ee3565b50909695505050505050565b60008060408385031215612f1e57600080fd5b612f2783612d1d565b915060208084013567ffffffffffffffff80821115612f4557600080fd5b818601915086601f830112612f5957600080fd5b813581811115612f6b57612f6b612dd3565b612f7d601f8201601f19168501612de9565b91508082528784828501011115612f9357600080fd5b80848401858401376000848284010152508093505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612eff5783516001600160a01b031683529284019291840191600101612fcd565b60005b8381101561300d578181015183820152602001612ff5565b50506000910152565b6000815180845261302e816020860160208601612ff2565b601f01601f19169290920160200192915050565b602081526000612ced6020830184613016565b6000806020838503121561306857600080fd5b823567ffffffffffffffff8082111561308057600080fd5b818501915085601f83011261309457600080fd5b8135818111156130a357600080fd5b8660208260051b85010111156130b857600080fd5b60209290920196919550909350505050565b600080600080600080600080610100898b0312156130e757600080fd5b6130f089612d1d565b9a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e00135945092505050565b60008060006060848603121561313b57600080fd5b61314484612d1d565b95602085013595506040909401359392505050565b60208082526039908201527f436f6c6c61746572616c206973206e6f7420636f6e666967757265642c20757360408201527f6520736574436f6c6c61746572616c506172616d657465727300000000000000606082015260800190565b6080815260006131c96080830187613016565b6020830195909552506040810192909252606090910152919050565b6000602082840312156131f757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611243576112436131fe565b634e487b7160e01b600052603260045260246000fd5b81810381811115611243576112436131fe565b60008251613262818460208701612ff2565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca164736f6c6343000817000a",
  "devdoc": {
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "ERC1967InvalidImplementation(address)": [
        {
          "details": "The `implementation` of the proxy is invalid."
        }
      ],
      "ERC1967NonPayable()": [
        {
          "details": "An upgrade function sees `msg.value > 0` that may be lost."
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "UUPSUnauthorizedCallContext()": [
        {
          "details": "The call is from an unauthorized context."
        }
      ],
      "UUPSUnsupportedProxiableUUID(bytes32)": [
        {
          "details": "The storage `slot` is unsupported as a UUID."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setSetupIsInitialized()": {
        "details": "The deployment script will call this function when all initial collaterals have been configured;      after this is set to true, all subsequent config/setters will need to go through the timelocks."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeToAndCall(address,bytes)": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "stateVariables": {
      "collateralParams": {
        "details": "Cannot be public as struct has too many variables for the stack.Create special view structs/getters instead."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9891,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "activePool",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9893,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "adminContract",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9895,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "borrowerOperations",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9897,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "collSurplusPool",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 9899,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "communityIssuance",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9901,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "debtToken",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 9903,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "defaultPool",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 9905,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "feeCollector",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 9907,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "gasPoolAddress",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 9909,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "trenStaking",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 9911,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "priceFeed",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 9913,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "sortedTrenBoxes",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 9915,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "stabilityPool",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 9917,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "timelockAddress",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 9919,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "treasuryAddress",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 9921,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "trenBoxManager",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 9923,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "trenBoxManagerOperations",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      },
      {
        "astId": 9925,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "isAddressSetupInitialized",
        "offset": 20,
        "slot": "16",
        "type": "t_bool"
      },
      {
        "astId": 9930,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "__gap",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_uint256)33_storage"
      },
      {
        "astId": 5956,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "collateralParams",
        "offset": 0,
        "slot": "50",
        "type": "t_mapping(t_address,t_struct(CollateralParams)11870_storage)"
      },
      {
        "astId": 5959,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "validCollateral",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 5961,
        "contract": "contracts/AdminContract.sol:AdminContract",
        "label": "isSetupInitialized",
        "offset": 0,
        "slot": "52",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)33_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[33]",
        "numberOfBytes": "1056"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(CollateralParams)11870_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IAdminContract.CollateralParams)",
        "numberOfBytes": "32",
        "value": "t_struct(CollateralParams)11870_storage"
      },
      "t_struct(CollateralParams)11870_storage": {
        "encoding": "inplace",
        "label": "struct IAdminContract.CollateralParams",
        "members": [
          {
            "astId": 11847,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "decimals",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 11849,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "index",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 11851,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "active",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 11853,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "borrowingFee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 11855,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "ccr",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 11857,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "mcr",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 11859,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "debtTokenGasCompensation",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 11861,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "minNetDebt",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 11863,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "mintCap",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 11865,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "percentDivisor",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 11867,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "redemptionFeeFloor",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 11869,
            "contract": "contracts/AdminContract.sol:AdminContract",
            "label": "redemptionBlockTimestamp",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}